{"version":3,"file":"static/js/918.f894ff25.chunk.js","mappings":"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","sources":["apiServices/apiServices.js","webpack://react-homework-template/./src/components/MoviesList/movies-list.module.css?3466","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/search-form.module.css?4214","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '81d6e128f8a4d2c60463e2d702c665ef',\n  },\n});\n\nexport const getTrendingMovies = () => {\n  return instance.get('/trending/movie/day');\n};\n\nexport const getMovieDetails = id => {\n  return instance.get(`/movie/${id}`);\n};\n\nexport const getActors = id => {\n  return instance.get(`/movie/${id}/credits`);\n};\n\nexport const getReviews = id => {\n  return instance.get(`/movie/${id}/reviews`);\n};\n\nexport const searchMovie = search => {\n  return instance.get(`/search/movie?query=${search}`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"movies-list_moviesList__7cQzt\",\"movieItem\":\"movies-list_movieItem__Td+3M\",\"link\":\"movies-list_link__nBtgH\",\"movieTitle\":\"movies-list_movieTitle__DbQR6\"};","import { Link, useLocation } from \"react-router-dom\";\nimport css from './movies-list.module.css';\nimport defaultPoster from '../../image/defaultPoster.jpg'\n\nconst MoviesList = ({ items }) => {\n  \n// локація для кнопки Назад на сторінці ДеталіКіно\n  const location = useLocation();\n\n\n  const elements = items.map(({ id, title, poster_path }) => {\n    const imgUrl = poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path): defaultPoster;\n  return (\n    <li key={id} className={css.movieItem}>\n      <Link to={`/movies/${id}`} state={{ from: location }} className={css.link}>\n        <img src={imgUrl} alt={title} width='300' />\n        <h3 className={css.movieTitle}>{title}</h3>\n      </Link>\n  </li>\n  )\n  })\n  \n  \n  \n  return <ul className={css.moviesList}>{elements}</ul>\n}\n\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"search-form_SearchForm__CvOIP\",\"SearchFormButton\":\"search-form_SearchFormButton__kArVc\",\"input\":\"search-form_input__amXEk\"};","import { useState } from \"react\";\nimport css from './search-form.module.css'\n\nconst SearchForm = ({onSubmit}) => {\n const [search, setSearch] = useState('');\n\n const handleChange = ({ target }) => {\n    setSearch(target.value)\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(search);\n    setSearch('')\n  }\n\n    return (\n  <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <input onChange={handleChange}\n          value={search}\n          name=\"search\"\n          className={css.input}\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n        />\n        <button type=\"submit\" className={css.SearchFormButton}>\n    </button>\n  </form>\n)\n\n}\n\nexport default SearchForm;","import SearchForm from '../../components/SearchForm/SearchForm';\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchMovie } from '../../apiServices/apiServices';\nimport MoviesList from '../../components/MoviesList/MoviesList'\n\n\nconst MoviesPage = () => {\n\n   const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const search = searchParams.get(\"query\");\n\n\n    useEffect(()=> {\n        const fetchData = async ()=> {\n            try {\n                setLoading(true);\n              const { data } = await searchMovie(search);\n                setMovies(data.results)\n            }\n            catch (error) {\n              setError(error.message);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        \n        if(search) {\n            fetchData();\n        }\n    }, [search])\n\n    const handleSearch = (value ) => {\n      setSearchParams({ query: value });\n      setMovies([])\n    }\n\n\n  return <>\n        {error && <p >Oops... something went wrong, try again!</p>}\n            {loading && <p>...Loading</p>}\n    <SearchForm onSubmit={handleSearch} />\n    {movies.length ? <MoviesList items={movies}/> : <p>Nothing was found for your request</p>}\n\n  </>\n}\n\nexport default MoviesPage"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","getMovieDetails","id","concat","getActors","getReviews","searchMovie","search","_ref","items","location","useLocation","elements","map","_ref2","title","poster_path","imgUrl","defaultPoster","_jsx","className","css","children","_jsxs","Link","to","state","from","src","alt","width","onSubmit","_useState","useState","_useState2","_slicedToArray","setSearch","e","preventDefault","onChange","target","value","name","type","autoComplete","autoFocus","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$searchMovie","data","_context","prev","next","sent","results","t0","message","finish","stop","apply","arguments","_Fragment","SearchForm","query","length","MoviesList"],"sourceRoot":""}